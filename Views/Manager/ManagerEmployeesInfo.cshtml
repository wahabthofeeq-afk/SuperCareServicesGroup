@model IEnumerable<RegisteredEmployee>
@using SuperCareServicesGroup.Models

@{
    ViewBag.Title = "ManagerEmployeesInfo";
    var pendingEmployees = ViewBag.PendingEmployees as List<Employee>;
    Layout = "~/Views/Shared/_Layout.cshtml";  
   // Determine logged-in user
    var userName =  Session["ManagerName"];
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Management - SuperCare Services</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #2c6fbb;
            --primary-dark: #1e5596;
            --secondary: #ff6b6b;
            --light: #f8f9fa;
            --dark: #343a40;
            --success: #28a745;
            --danger: #dc3545;
            --warning: #ffc107;
            --info: #17a2b8;
            --gray-100: #f8f9fa;
            --gray-200: #e9ecef;
            --gray-300: #dee2e6;
            --gray-600: #6c757d;
            --gray-800: #343a40;
            --border-radius: 12px;
            --box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body, html {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--gray-100);
            color: var(--dark);
            line-height: 1.6;
        }

        /* Navbar */
        .navbar {
            width: 100%;
            height: 70px;
            background: var(--primary);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 25px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1001;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
        }

            .navbar .brand {
                font-weight: bold;
                font-size: 20px;
                display: flex;
                align-items: center;
            }

                .navbar .brand i {
                    margin-right: 12px;
                    font-size: 22px;
                    color: #ffd166;
                }

        .menu-toggle {
            cursor: pointer;
            font-size: 1.5rem;
            display: block;
            margin-right: 15px;
            color: white;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
            font-weight: 500;
        }

            .user-section .logout-btn {
                background: white;
                color: var(--primary);
                padding: 8px 16px;
                border-radius: var(--border-radius);
                font-weight: 600;
                text-decoration: none;
                display: flex;
                align-items: center;
                gap: 8px;
                transition: var(--transition);
            }

                .user-section .logout-btn:hover {
                    background: #f0f0f0;
                    transform: translateY(-2px);
                }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: linear-gradient(to bottom, var(--primary), var(--primary-dark));
            color: white;
            height: 100vh;
            position: fixed;
            left: -280px;
            top: 70px;
            overflow-y: auto;
            transition: var(--transition);
            z-index: 1000;
            padding: 25px 0;
            box-shadow: var(--box-shadow);
        }

            .sidebar.open {
                left: 0;
            }

        .sidebar-header {
            padding: 0 25px 20px;
            border-bottom: 1px solid rgba(255,255,255,0.15);
            margin-bottom: 20px;
        }

            .sidebar-header h3 {
                font-weight: 600;
                font-size: 1.3rem;
                display: flex;
                align-items: center;
                gap: 10px;
            }

        .sidebar-menu {
            list-style: none;
            padding: 0 15px;
        }

            .sidebar-menu li {
                margin-bottom: 8px;
            }

            .sidebar-menu a {
                display: flex;
                align-items: center;
                padding: 14px 18px;
                color: rgba(255,255,255,0.9);
                text-decoration: none;
                border-radius: var(--border-radius);
                font-weight: 500;
                margin-bottom: 5px;
                transition: var(--transition);
            }

                .sidebar-menu a:hover {
                    background-color: rgba(255,255,255,0.12);
                    color: white;
                    transform: translateX(5px);
                }

                .sidebar-menu a i {
                    margin-right: 15px;
                    width: 20px;
                    text-align: center;
                    font-size: 1.1rem;
                }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 0;
            padding: 30px;
            margin-top: 70px;
            transition: margin-left 0.3s ease;
        }

            .main-content.shift {
                margin-left: 280px;
            }

        /* Dashboard Cards / Call Out Card */
        .dashboard-card, .callout-card {
            background: #fff;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 25px 30px;
            margin-bottom: 30px;
            transition: var(--transition);
            animation: fadeInUp 0.6s ease forwards;
        }

            .dashboard-card:hover, .callout-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 35px rgba(0,0,0,0.15);
            }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e0e0e0;
        }

            .card-header h2 {
                font-size: 1.6rem;
                color: var(--primary);
                display: flex;
                align-items: center;
                gap: 12px;
            }

        /* Form Groups */
        .form-group label {
            font-weight: 600;
            color: var(--dark);
            display: block;
            margin-bottom: 8px;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ced4da;
            border-radius: var(--border-radius);
            font-weight: 500;
            transition: var(--transition);
        }

            .form-group input:focus,
            .form-group select:focus,
            .form-group textarea:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 2px rgba(44,111,187,0.2);
            }

        /* Buttons */
        .btn-primary {
            background-color: var(--primary);
            color: #fff;
            border-radius: var(--border-radius);
            padding: 12px 20px;
            font-weight: 600;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: var(--transition);
        }

            .btn-primary:hover {
                background-color: var(--primary-dark);
                transform: translateY(-2px);
                box-shadow: 0 6px 18px rgba(0,0,0,0.1);
            }

        /* Price Summary */
        .price-summary h4 {
            color: var(--primary);
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .price-summary .form-group input {
            background: var(--gray-100);
            border-radius: var(--border-radius);
            padding: 10px 15px;
            font-weight: 500;
        }

        /* Map Container */
        .map-container {
            border-radius: var(--border-radius);
            overflow: hidden;
            margin-bottom: 20px;
            box-shadow: var(--box-shadow);
        }

        /* Status Badges */
        .status-pending {
            background-color: var(--warning);
            color: #212529;
        }

        .status-in-progress {
            background-color: var(--info);
            color: #fff;
        }

        .status-completed {
            background-color: var(--success);
            color: #fff;
        }

        .status-rejected {
            background-color: var(--danger);
            color: #fff;
        }

        .status-pending, .status-in-progress, .status-completed, .status-rejected {
            padding: 4px 10px;
            border-radius: 8px;
            font-weight: 600;
            display: inline-block;
        }

        /* Animations */
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive */
        @@media (max-width: 992px) {
            .sidebar {
                left: -280px;
                width: 260px;
            }

                .sidebar.open {
                    left: 0;
                }

            .main-content {
                margin-left: 0;
            }

                .main-content.shift {
                    margin-left: 260px;
                }
        }

        @@media (max-width: 768px) {
            .main-content {
                padding: 20px 15px;
            }
        }

        /* Stats Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 25px;
            text-align: center;
            transition: var(--transition);
        }

            .stat-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.12);
            }

        .stat-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            display: block;
        }

        .registered-icon {
            color: var(--success);
        }

        .pending-icon {
            color: var(--warning);
        }

        .stat-card h3 {
            font-size: 1.3rem;
            margin-bottom: 10px;
            color: var(--dark);
        }

        .stat-number {
            font-size: 2.2rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 10px;
        }

        .stat-text {
            color: var(--gray-600);
            font-size: 0.95rem;
        }

        /* Table Styles */
        .table-container {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
            margin-bottom: 30px;
        }

        .table-header {
            background: var(--primary);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .table-header h3 {
                font-size: 1.3rem;
                display: flex;
                align-items: center;
                gap: 10px;
            }

        .table-responsive {
            overflow-x: auto;
        }

        .data-table {
            width: 100%;
            border-collapse: collapse;
        }

            .data-table th {
                background-color: var(--gray-100);
                padding: 16px 20px;
                text-align: left;
                font-weight: 600;
                color: var(--gray-800);
                border-bottom: 2px solid var(--gray-300);
            }

            .data-table td {
                padding: 14px 20px;
                border-bottom: 1px solid var(--gray-200);
                vertical-align: middle;
            }

            .data-table tr:hover {
                background-color: var(--gray-100);
            }

        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .btn {
            padding: 8px 16px;
            border-radius: var(--border-radius);
            font-weight: 500;
            text-decoration: none;
            transition: var(--transition);
            border: none;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            font-size: 0.9rem;
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 0.85rem;
        }

        .btn-success {
            background-color: var(--success);
            color: white;
        }

            .btn-success:hover {
                background-color: #218838;
            }

        .btn-danger {
            background-color: var(--danger);
            color: white;
        }

            .btn-danger:hover {
                background-color: #c82333;
            }

        .btn-warning {
            background-color: var(--warning);
            color: var(--dark);
        }

            .btn-warning:hover {
                background-color: #e0a800;
            }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: var(--gray-600);
        }

            .empty-state i {
                font-size: 3rem;
                margin-bottom: 15px;
                display: block;
                color: var(--gray-300);
            }

        /* Animation for cards */
        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .stat-card, .table-container {
            animation: fadeIn 0.5s ease-out;
        }
        .badge {
            background-color: red;
            color: white;
            font-size: 12px;
            padding: 3px 8px;
            border-radius: 50%;
            margin-left: 6px;
            vertical-align: middle;
            display: inline-block;
            min-width: 20px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- Navbar -->
        <div class="navbar">
            <div style="display:flex; align-items:center;">
                <div class="menu-toggle" id="menuToggle">
                    <i class="fas fa-bars"></i>
                </div>
                <div class="brand"><i class="fas fa-spa"></i><span>SuperCare Services</span></div>
            </div>
            <div class="user-section">
                <span>Welcome @userName!</span>
                <a href="@Url.Action("Index", "Home")" class="logout-btn"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <h3><i class="fas fa-user-tie"></i> Manager Portal</h3>
            </div>
            <ul class="sidebar-menu">
                <li><a href="@Url.Action("ManagerEmployeesInfo", "Manager")"><i class="fas fa-home"></i> Dashboard</a></li>
                <li>
                    <a href="@Url.Action("ConfirmCallout", "Manager")" class="nav-link">
                        <i class="fas fa-check-double"></i> Confirm Callout
                        <span id="pendingCount" class="badge">0</span>
                    </a>
                </li>

                <li>
                    <a href="@Url.Action("ManagerAssignJobs", "Manager")" class="nav-link">
                        <i class="fas fa-tasks"></i> Callout Assignment
                        <span id="assignCount" class="badge">0</span>
                    </a>
                </li>

                <li><a href="@Url.Action("AssignedCallouts", "Manager")"><i class="fas fa-truck"></i> Assigned Callouts</a></li>
                <li>
                    <a href="@Url.Action("ManagerAllowBooking", "Manager")" class="nav-link">
                        <i class="fas fa-calendar-check"></i> Allow Booking
                        <span id="allowBookingCount" class="badge">0</span>
                    </a>
                </li>
                <li>
                    <a href="@Url.Action("ManagerAssignCleaningJob", "Manager")" class="nav-link">
                        <i class="fas fa-tasks"></i> Cleaning Assignment
                        <span id="cleaningAssignCount" class="badge">0</span>
                    </a>
                </li>


                <!--   <li><a href="@Url.Action("ManagerServicePackages", "Manager")"><i class="fas fa-box-open"></i> Edit Service Packages</a></li>-->
                <li><a href="@Url.Action("ManagerCompletedJobs", "Manager")"><i class="fas fa-clipboard-check"></i> Completed Jobs</a></li>
                <li><a href="@Url.Action("ManagerFeedback", "Manager")"><i class="fas fa-star"></i> Customer Feedback</a></li>
                <li><a href="@Url.Action("ManagerProfile", "Manager")"><i class="fas fa-user"></i> My Profile</a></li>
                <li><a href="#"></a></li>

            </ul>

        </div>

        <!-- Main Content -->
        <div class="main-content" id="mainContent">
            <!-- Dashboard -->
            <div class="dashboard" id="dashboard">
                <h2><i class="fas fa-users-cog"></i> Employee Management</h2>
            </div>

            <!-- Stats Cards -->
            <div class="stats-grid">
                <div class="stat-card">
                    <i class="fas fa-user-check stat-icon registered-icon"></i>
                    <div class="stat-number">@(Model != null ? Model.Count() : 0)</div>
                    <h3>Registered Employees</h3>
                    <p class="stat-text">Active team members</p>
                </div>

                <div class="stat-card">
                    <i class="fas fa-clock stat-icon pending-icon"></i>
                    <div class="stat-number">@(pendingEmployees != null ? pendingEmployees.Count : 0)</div>
                    <h3>Pending Registrations</h3>
                    <p class="stat-text">Awaiting approval</p>
                </div>
            </div>

            <!-- Registered Employees Table -->
            <div class="table-container">
                <div class="table-header">
                    <h3><i class="fas fa-user-check"></i> Registered Employees</h3>
                </div>
                <div class="table-responsive">
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Phone</th>
                                <th>Email</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var emp in Model)
                                {
                                    <tr>
                                        <td>@emp.FirstName @emp.LastName</td>
                                        <td>@emp.PhoneNumber</td>
                                        <td>@emp.Email</td>
                                        <td>
                                            <a href="@Url.Action("RemoveRegistered", "Manager", new { id = emp.RegisteredEmployeeID })"
                                               class="btn btn-danger btn-sm"
                                               onclick="return confirm('Are you sure you want to remove this employee?');">
                                                <i class="fas fa-trash-alt"></i> Remove
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="empty-state">
                                        <i class="fas fa-user-slash"></i>
                                        <p>No registered employees found.</p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Pending Employees Table -->
            <div class="table-container">
                <div class="table-header">
                    <h3><i class="fas fa-clock"></i> Pending Employee Registrations</h3>
                </div>
                <div class="table-responsive">
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Phone</th>
                                <th>Email</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (pendingEmployees != null && pendingEmployees.Any())
                            {
                                foreach (var emp in pendingEmployees)
                                {
                                    <tr>
                                        <td>@emp.FirstName @emp.LastName</td>
                                        <td>@emp.PhoneNumber</td>
                                        <td>@emp.Email</td>
                                        <td>
                                            <div class="action-buttons">
                                                <a href='@Url.Action("AllowEmployee", "Manager", new { id = emp.Id })'
                                                   class="btn btn-success btn-sm">
                                                    <i class="fas fa-check"></i> Allow
                                                </a>
                                                <a href='@Url.Action("DeclineEmployee", "Manager", new { id = emp.Id })'
                                                   class="btn btn-warning btn-sm">
                                                    <i class="fas fa-times"></i> Decline
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="empty-state">
                                        <i class="fas fa-inbox"></i>
                                        <p>No pending employee registrations.</p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        const menuToggle = document.getElementById('menuToggle');
        const sidebar = document.getElementById('sidebar');
        const mainContent = document.getElementById('mainContent');

        // Sidebar toggle
        menuToggle.addEventListener('click', () => {
            sidebar.classList.toggle('open');
            mainContent.classList.toggle('shift');
        });

        // Auto-close on mobile when clicking outside
        document.addEventListener('click', (event) => {
            if (window.innerWidth < 992 &&
                sidebar.classList.contains('open') &&
                !sidebar.contains(event.target) &&
                !menuToggle.contains(event.target)) {
                sidebar.classList.remove('open');
                mainContent.classList.remove('shift');
            }
        });

        // Auto-close when menu link clicked (mobile)
        sidebar.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', () => {
                if (window.innerWidth < 992) {
                    sidebar.classList.remove('open');
                    mainContent.classList.remove('shift');
                }
            });
        });
        fetch('/Manager/GetPendingCount')
            .then(response => response.json())
            .then(data => {
                const badge = document.getElementById('pendingCount');
                if (data > 0) {
                    badge.innerText = data;
                    badge.style.display = "inline-block"; // show badge
                } else {
                    badge.style.display = "none"; // hide badge
                }
            });
        fetch('/Manager/GetUnassignedPaidConfirmedCount')
            .then(response => response.json())
            .then(data => {
                const badge = document.getElementById('assignCount');
                if (data > 0) {
                    badge.innerText = data;
                    badge.style.display = "inline-block"; // show badge
                } else {
                    badge.style.display = "none"; // hide badge
                }
            });
        // Update Allow Booking badge
        fetch('/Manager/GetAllowBookingCount')
            .then(response => response.json())
            .then(data => {
                const badge = document.getElementById('allowBookingCount');
                if (data > 0) {
                    badge.innerText = data;
                    badge.style.display = "inline-block"; // show badge
                } else {
                    badge.style.display = "none"; // hide badge
                }
            });
        fetch('/Manager/GetUnassignedPaidCleaningCount')
            .then(response => response.json())
            .then(data => {
                const badge = document.getElementById('cleaningAssignCount'); // add this ID to your HTML badge
                if (data > 0) {
                    badge.innerText = data;
                    badge.style.display = "inline-block"; // show badge
                } else {
                    badge.style.display = "none"; // hide badge
                }
            });
    </script>
</body>
</html>