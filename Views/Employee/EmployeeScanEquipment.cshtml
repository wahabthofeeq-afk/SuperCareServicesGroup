@using SuperCareServicesGroup.Models
@{
    ViewBag.Title = "EmployeeScanEquipment";
    var selectedPackage = ViewBag.SelectedPackage as EquipmentPackage;
    var job = ViewBag.Job as BookCleaning;

    var equipment = ViewBag.Equipment as List<string>;
    var employees = ViewBag.AssignedEmployees as List<RegisteredEmployee>;
    var userName = Session["EmployeeName"];

    // Safely get the assigned employees or use an empty list
    var employeesList = ViewBag.AssignedEmployees as List<RegisteredEmployee> ?? new List<RegisteredEmployee>();

    // Safely get the logged-in employee ID from session
    int loggedInEmployeeSessionId = Session["RegisteredEmployeeID"] != null ? (int)Session["RegisteredEmployeeID"] : 0;

    // Only scan for the logged-in employee's barcode
    var loggedInEmployeeID = employeesList.FirstOrDefault(e => e.RegisteredEmployeeID == loggedInEmployeeSessionId)?.RegisteredEmployeeID ?? 0;
}

@Html.AntiForgeryToken()
<!-- ✅ Load FontAwesome (for icons) -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Equipment Scanner - SuperCare Services</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #2c6fbb;
            --primary-dark: #1e5596;
            --primary-light: #e8f1fc;
            --secondary: #ff6b6b;
            --light: #f8f9fa;
            --dark: #343a40;
            --success: #28a745;
            --danger: #dc3545;
            --warning: #ffc107;
            --info: #17a2b8;
            --gray-100: #f8f9fa;
            --gray-200: #e9ecef;
            --gray-300: #dee2e6;
            --gray-600: #6c757d;
            --gray-800: #343a40;
            --border-radius: 12px;
            --box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body, html {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--gray-100);
            color: var(--dark);
            line-height: 1.6;
        }

        /* Navbar */
        .navbar {
            width: 100%;
            height: 70px;
            background: var(--primary);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 25px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1001;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
        }

            .navbar .brand {
                font-weight: bold;
                font-size: 20px;
                display: flex;
                align-items: center;
            }

                .navbar .brand i {
                    margin-right: 12px;
                    font-size: 22px;
                    color: #ffd166;
                }

        .menu-toggle {
            cursor: pointer;
            font-size: 1.5rem;
            display: block;
            margin-right: 15px;
            color: white;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
            font-weight: 500;
        }

            .user-section .logout-btn {
                background: white;
                color: var(--primary);
                padding: 8px 16px;
                border-radius: var(--border-radius);
                font-weight: 600;
                text-decoration: none;
                display: flex;
                align-items: center;
                gap: 8px;
                transition: var(--transition);
            }

                .user-section .logout-btn:hover {
                    background: #f0f0f0;
                    transform: translateY(-2px);
                }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: linear-gradient(to bottom, var(--primary), var(--primary-dark));
            color: white;
            height: 100vh;
            position: fixed;
            left: -280px;
            top: 70px;
            overflow-y: auto;
            transition: var(--transition);
            z-index: 1000;
            padding: 25px 0;
            box-shadow: var(--box-shadow);
        }

            .sidebar.open {
                left: 0;
            }

        .sidebar-header {
            padding: 0 25px 20px;
            border-bottom: 1px solid rgba(255,255,255,0.15);
            margin-bottom: 20px;
        }

            .sidebar-header h3 {
                font-weight: 600;
                font-size: 1.3rem;
                display: flex;
                align-items: center;
                gap: 10px;
            }

        .sidebar-menu {
            list-style: none;
            padding: 0 15px;
        }

            .sidebar-menu li {
                margin-bottom: 8px;
            }

            .sidebar-menu a {
                display: flex;
                align-items: center;
                padding: 14px 18px;
                color: rgba(255,255,255,0.9);
                text-decoration: none;
                border-radius: var(--border-radius);
                font-weight: 500;
                margin-bottom: 5px;
                transition: var(--transition);
            }

                .sidebar-menu a:hover {
                    background-color: rgba(255,255,255,0.12);
                    color: white;
                    transform: translateX(5px);
                }

                .sidebar-menu a i {
                    margin-right: 15px;
                    width: 20px;
                    text-align: center;
                    font-size: 1.1rem;
                }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 0;
            padding: 30px;
            margin-top: 70px;
            transition: margin-left 0.3s ease;
        }

            .main-content.shift {
                margin-left: 280px;
            }

        /* Dashboard Cards / Call Out Card */
        .dashboard-card, .callout-card {
            background: #fff;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 25px 30px;
            margin-bottom: 30px;
            transition: var(--transition);
            animation: fadeInUp 0.6s ease forwards;
        }

            .dashboard-card:hover, .callout-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 35px rgba(0,0,0,0.15);
            }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e0e0e0;
        }

            .card-header h2 {
                font-size: 1.6rem;
                color: var(--primary);
                display: flex;
                align-items: center;
                gap: 12px;
            }

        /* Form Groups */
        .form-group label {
            font-weight: 600;
            color: var(--dark);
            display: block;
            margin-bottom: 8px;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ced4da;
            border-radius: var(--border-radius);
            font-weight: 500;
            transition: var(--transition);
        }

            .form-group input:focus,
            .form-group select:focus,
            .form-group textarea:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 2px rgba(44,111,187,0.2);
            }

        /* Buttons */
        .btn {
            padding: 12px 20px;
            border-radius: var(--border-radius);
            font-weight: 600;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: var(--transition);
            border: none;
            text-decoration: none;
        }

        .btn-primary {
            background-color: var(--primary);
            color: #fff;
        }

            .btn-primary:hover {
                background-color: var(--primary-dark);
                transform: translateY(-2px);
                box-shadow: 0 6px 18px rgba(0,0,0,0.1);
            }

        .btn-success {
            background-color: var(--success);
            color: #fff;
        }

            .btn-success:hover {
                background-color: #218838;
                transform: translateY(-2px);
                box-shadow: 0 6px 18px rgba(0,0,0,0.1);
            }

        /* Price Summary */
        .price-summary h4 {
            color: var(--primary);
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .price-summary .form-group input {
            background: var(--gray-100);
            border-radius: var(--border-radius);
            padding: 10px 15px;
            font-weight: 500;
        }

        /* Map Container */
        .map-container {
            border-radius: var(--border-radius);
            overflow: hidden;
            margin-bottom: 20px;
            box-shadow: var(--box-shadow);
        }

        /* Status Badges */
        .status-pending {
            background-color: var(--warning);
            color: #212529;
        }

        .status-in-progress {
            background-color: var(--info);
            color: #fff;
        }

        .status-completed {
            background-color: var(--success);
            color: #fff;
        }

        .status-rejected {
            background-color: var(--danger);
            color: #fff;
        }

        .status-pending, .status-in-progress, .status-completed, .status-rejected {
            padding: 4px 10px;
            border-radius: 8px;
            font-weight: 600;
            display: inline-block;
        }

        /* Animations */
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* New Styles for Equipment Scanner */
        .job-header {
            background: linear-gradient(135deg, var(--primary-light), #fff);
            border-radius: var(--border-radius);
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: var(--box-shadow);
            border-left: 5px solid var(--primary);
        }

        .job-id-badge {
            background: var(--primary);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            display: inline-block;
            margin-bottom: 15px;
        }

        .customer-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .info-card {
            background: white;
            padding: 15px;
            border-radius: var(--border-radius);
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }

            .info-card i {
                color: var(--primary);
                margin-right: 10px;
                font-size: 1.2rem;
            }

        .equipment-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px;
            margin: 25px 0;
        }

        .equipment-item {
            background: white;
            border-radius: var(--border-radius);
            padding: 15px;
            display: flex;
            align-items: center;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
            transition: var(--transition);
        }

            .equipment-item:hover {
                transform: translateY(-3px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

            .equipment-item i {
                color: var(--success);
                margin-right: 10px;
                font-size: 1.2rem;
            }

        .employees-table {
            width: 100%;
            border-collapse: collapse;
            margin: 25px 0;
            background: white;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--box-shadow);
        }

            .employees-table th {
                background-color: var(--primary);
                color: white;
                text-align: left;
                padding: 15px;
            }

            .employees-table td {
                padding: 15px;
                border-bottom: 1px solid var(--gray-200);
            }

            .employees-table tr:last-child td {
                border-bottom: none;
            }

            .employees-table tr:hover {
                background-color: var(--gray-100);
            }

        .custom-checkbox {
            width: 20px;
            height: 20px;
            accent-color: var(--primary);
        }

        .scan-section {
            text-align: center;
            margin-top: 30px;
            padding-top: 30px;
            border-top: 1px solid var(--gray-200);
        }

        .scan-btn {
            padding: 15px 30px;
            font-size: 1.1rem;
            border-radius: 50px;
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
        }

        .package-badge {
            background: var(--primary-light);
            color: var(--primary);
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            display: inline-block;
            margin: 10px 0;
        }

        /* NEW STYLES FOR PACKAGE CARDS */
        .packages-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 25px;
            margin: 30px 0;
        }

        .package-card {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
            border-radius: var(--border-radius);
            padding: 25px;
            box-shadow: var(--box-shadow);
            border-left: 4px solid var(--primary);
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

            .package-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
                transition: left 0.5s ease;
            }

            .package-card:hover::before {
                left: 100%;
            }

            .package-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 15px 35px rgba(0,0,0,0.15);
                border-left-color: var(--secondary);
            }

        .package-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid var(--primary-light);
        }

        .package-name {
            font-size: 1.4rem;
            font-weight: 700;
            color: var(--primary);
            margin: 0;
        }

        .package-icon {
            width: 50px;
            height: 50px;
            background: var(--primary-light);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary);
            font-size: 1.3rem;
        }

        .package-equipment {
            list-style: none;
            padding: 0;
            margin: 0;
        }

            .package-equipment li {
                padding: 8px 0;
                border-bottom: 1px solid var(--gray-200);
                display: flex;
                align-items: center;
                transition: var(--transition);
            }

                .package-equipment li:last-child {
                    border-bottom: none;
                }

                .package-equipment li:hover {
                    transform: translateX(5px);
                    color: var(--primary);
                }

                .package-equipment li i {
                    color: var(--success);
                    margin-right: 12px;
                    font-size: 0.9rem;
                }

        .no-job-content {
            text-align: center;
            padding: 40px 20px;
        }

        .no-job-icon {
            font-size: 4rem;
            color: var(--warning);
            margin-bottom: 20px;
            opacity: 0.8;
        }

        .no-job-title {
            color: var(--dark);
            font-size: 1.8rem;
            margin-bottom: 15px;
            font-weight: 700;
        }

        .no-job-subtitle {
            color: var(--gray-600);
            font-size: 1.1rem;
            margin-bottom: 40px;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
            line-height: 1.6;
        }

        .redirect-section {
            background: linear-gradient(135deg, var(--primary-light), #fff);
            border-radius: var(--border-radius);
            padding: 30px;
            margin-top: 40px;
            border: 2px dashed var(--primary);
            text-align: center;
        }

        .redirect-icon {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 20px;
        }

        .redirect-text {
            color: var(--dark);
            font-size: 1.2rem;
            margin-bottom: 25px;
            font-weight: 600;
        }

        .redirect-btn {
            padding: 15px 35px;
            font-size: 1.1rem;
            border-radius: 50px;
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 12px;
            transition: var(--transition);
            box-shadow: 0 5px 20px rgba(44, 111, 187, 0.3);
        }

            .redirect-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(44, 111, 187, 0.4);
                color: white;
            }

        /* Package-specific colors */
        .package-card.standard {
            border-left-color: #2c6fbb;
        }

        .package-card.deep {
            border-left-color: #28a745;
        }

        .package-card.disinfection {
            border-left-color: #dc3545;
        }

        .package-card.postevent {
            border-left-color: #ffc107;
        }

        .package-card.move {
            border-left-color: #6f42c1;
        }

        .package-card.standard .package-icon {
            background: #e8f1fc;
            color: #2c6fbb;
        }

        .package-card.deep .package-icon {
            background: #e8f5e8;
            color: #28a745;
        }

        .package-card.disinfection .package-icon {
            background: #fde8e8;
            color: #dc3545;
        }

        .package-card.postevent .package-icon {
            background: #fff8e1;
            color: #ffc107;
        }

        .package-card.move .package-icon {
            background: #f0e8ff;
            color: #6f42c1;
        }

        /* Animation for cards loading */
        @@keyframes cardSlideIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .package-card {
            animation: cardSlideIn 0.6s ease forwards;
        }

            .package-card:nth-child(1) {
                animation-delay: 0.1s;
            }

            .package-card:nth-child(2) {
                animation-delay: 0.2s;
            }

            .package-card:nth-child(3) {
                animation-delay: 0.3s;
            }

            .package-card:nth-child(4) {
                animation-delay: 0.4s;
            }

            .package-card:nth-child(5) {
                animation-delay: 0.5s;
            }

        /* Responsive */
        @@media (max-width: 992px) {
            .sidebar {
                left: -280px;
                width: 260px;
            }

                .sidebar.open {
                    left: 0;
                }

            .main-content {
                margin-left: 0;
            }

                .main-content.shift {
                    margin-left: 260px;
                }

            .equipment-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }

            .packages-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }
        }

        @@media (max-width: 768px) {
            .main-content {
                padding: 20px 15px;
            }

            .customer-info {
                grid-template-columns: 1fr;
            }

            .employees-table {
                display: block;
                overflow-x: auto;
            }

            .package-card {
                padding: 20px;
            }

            .no-job-title {
                font-size: 1.5rem;
            }

            .no-job-subtitle {
                font-size: 1rem;
            }
        }

        .dashboard-card {
            background: #fff;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 30px;
            margin-bottom: 30px;
            text-align: center;
            transition: var(--transition);
            animation: fadeInUp 0.6s ease forwards;
        }

            .dashboard-card h2 {
                color: var(--primary);
                font-weight: 700;
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 12px;
            }

            .dashboard-card p {
                margin-top: 12px;
                color: var(--gray-600);
                font-size: 1rem;
            }

        .no-job-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 60vh;
            text-align: center;
        }

        .alert-warning {
            background: #fff3cd;
            color: #856404;
            padding: 20px;
            border-radius: var(--border-radius);
            max-width: 500px;
            width: 100%;
            border-left: 4px solid var(--warning);
        }

        .scan-section {
            text-align: center;
            margin-top: 30px;
            padding-top: 30px;
            border-top: 1px solid #e9ecef;
        }

        .scan-btn {
            padding: 15px 30px;
            font-size: 1.1rem;
            border-radius: 50px;
            box-shadow: 0 5px 15px rgba(40,167,69,0.3);
            cursor: pointer;
        }

        #qr-reader {
            width: 100%;
            max-width: 400px;
            margin: 20px auto;
            display: none;
        }

        #cameraPreview {
            width: 100%;
            max-width: 350px; /* smaller max size */
            height: 250px; /* fixed height or adjust proportionally */
            margin: 10px auto; /* center it */
            border: 1px solid #ccc;
            border-radius: 8px; /* rounded corners look cleaner */
            overflow: hidden; /* prevent video overflow */
            box-shadow: 0 2px 6px rgba(0,0,0,0.2); /* subtle shadow */
            display: none; /* hide until camera starts */
        }

        .badge {
            background-color: red;
            color: white;
            font-size: 12px;
            padding: 3px 8px;
            border-radius: 50%;
            margin-left: 6px;
            vertical-align: middle;
            display: inline-block;
            min-width: 20px;
            text-align: center;
        }
    </style>

</head>
<body>
    <div class="app-container">
        <!-- Navbar -->
        <div class="navbar">
            <div style="display:flex; align-items:center;">
                <div class="menu-toggle" id="menuToggle">
                    <i class="fas fa-bars"></i>
                </div>
                <div class="brand"><i class="fas fa-spa"></i><span>SuperCare Services</span></div>
            </div>
            <div class="user-section">
                <span>Welcome @userName!</span>
                <a href="@Url.Action("Index", "Home")" class="logout-btn"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <h3><i class="fas fa-user-tie"></i> Employee Portal</h3>
            </div>
            <ul class="sidebar-menu">
                <li><a href="@Url.Action("EmployeeClock", "Employee")"><i class="fas fa-home"></i> Dashboard</a></li>
                <li>
                    <a href="@Url.Action("EmployeeAssignedQuotes", "Employee")" class="active">
                        <i class="fas fa-tasks"></i> Assigned Callouts
                        <span id="assignedBadge" class="badge" style="display:none;">0</span>
                    </a>
                </li>

                <li>
                    <a href="@Url.Action("EmployeeJobs", "Employee")">
                        <i class="fas fa-clipboard-list"></i> Ongoing Jobs
                        <span id="ongoingJobsBadge" class="badge" style="display:none;">0</span>
                    </a>
                </li>

                <li><a href="@Url.Action("EmployeeScanEquipment", "Employee")"><i class="fas fa-barcode"></i> Scan Equipment</a></li>
                <li><a href="@Url.Action("EmployeeJobHistory", "Employee")"><i class="fas fa-history"></i> Job History</a></li>
                <li>
                    <a href="@Url.Action("EmployeeProfile", "Employee")">
                        <i class="fas fa-user"></i> My Profile
                    </a>
                </li>
            </ul>
        </div>

        <div class="main-content" id="mainContent">
            <!-- Dashboard -->
            <div class="dashboard-card">
                <div class="card-header">
                    <h2>
                        <i class="fas fa-qrcode"></i> Employee Equipment Scanner
                    </h2>
                </div>
            </div>

            @if (job == null)
            {
                <div class="dashboard-card">
                    <div class="card-header">
                        <h2><i class="fas fa-box-open"></i> Available Service Packages</h2>
                    </div>

                    @{
                        var packages = new List<EquipmentPackage>
                                {
                            new EquipmentPackage { PackageName = "Standard", Equipment = new List<string> { "Vacuum Cleaner", "Mop", "Bucket", "Glass Cleaner", "Furniture Polish" } },
                            new EquipmentPackage { PackageName = "Deep", Equipment = new List<string> { "Industrial Vacuum", "Disinfectant Sprays", "Dusting Cloths", "Carpet Cleaner", "Trash Bags" } },
                            new EquipmentPackage { PackageName = "Disinfection", Equipment = new List<string> { "Protective Gloves", "Medical-Grade Disinfectant", "Face Masks", "Biohazard Bags", "Sanitizer Fogger" } },
                            new EquipmentPackage { PackageName = "PostEvent", Equipment = new List<string> { "Floor Scrubber", "Degreaser", "Trash Bins", "Broom & Dustpan", "Sanitizing Spray" } },
                            new EquipmentPackage { PackageName = "Move", Equipment = new List<string> { "Vacuum Cleaner", "Mop & Bucket", "Glass Cleaner", "Dusting Cloths", "Trash Bags", "Floor Cleaner", "Furniture Polish" } }
                        };
                    }

                    <div class="no-job-content">
                        <div class="no-job-icon">
                            <i class="fas fa-boxes"></i>
                        </div>
                        <h3 class="no-job-title">No Active Job Selected</h3>
                        <p class="no-job-subtitle">
                            To scan equipment, please select an active cleaning job from your assigned jobs.
                            Below are the available service packages we offer.
                        </p>

                        <div class="packages-grid">
                            @foreach (var package in packages)
                            {
                                <div class="package-card @package.PackageName.ToLower()">
                                    <div class="package-header">
                                        <h4 class="package-name">@package.PackageName Package</h4>
                                        <div class="package-icon">
                                            @if (package.PackageName == "Standard")
                                            {<i class="fas fa-home"></i> }
                                            else if (package.PackageName == "Deep")
                                            { <i class="fas fa-broom"></i> }
                                            else if (package.PackageName == "Disinfection")
                                            { <i class="fas fa-shield-virus"></i> }
                                            else if (package.PackageName == "PostEvent")
                                            { <i class="fas fa-calendar-check"></i> }
                                            else if (package.PackageName == "Move")
                                            { <i class="fas fa-truck-moving"></i>}
                                        </div>
                                    </div>
                                    <ul class="package-equipment">
                                        @foreach (var eq in package.Equipment)
                                        {
                                            <li>
                                                <i class="fas fa-check-circle"></i>
                                                <span>@eq</span>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        </div>

                        <div class="redirect-section">
                            <div class="redirect-icon">
                                <i class="fas fa-briefcase"></i>
                            </div>
                            <p class="redirect-text">Ready to scan equipment? Select a job to get started!</p>
                            <a href="@Url.Action("EmployeeJobs", "Employee")" class="redirect-btn">
                                <i class="fas fa-arrow-right"></i>
                                Go to My Jobs
                            </a>
                        </div>
                    </div>
                </div>
            }

            else
            {
                <div class="job-header">
                    <span class="job-id-badge">Job #@job.BookCleaningID</span>
                    <span class="job-id-badge">Cleaning Type: @job.CleaningType</span>
                    <h3 class="text-primary mb-3">Scan Equipment</h3>

                    <div class="customer-info">
                        <div class="info-card">
                            <p><i class="fas fa-user"></i> <strong>Customer:</strong> @job.CustomerName</p>
                        </div>
                        <div class="info-card">
                            <p><i class="fas fa-map-marker-alt"></i> <strong>Location:</strong> @job.CustomerLocation</p>
                        </div>
                    </div>

                    <div class="package-info">
                        <span class="package-badge">
                            <i class="fas fa-box"></i> Service Package: @(selectedPackage != null ? selectedPackage.PackageName : "No package assigned")
                        </span>
                    </div>
                </div>

                <!-- Equipment Section -->
                <div class="dashboard-card">
                    <div class="card-header">
                        <h2><i class="fas fa-tools"></i> Required Equipment</h2>
                    </div>

                    @if (selectedPackage?.Equipment != null && selectedPackage.Equipment.Count > 0)
                    {
                        <div class="equipment-grid">
                            @foreach (var eq in selectedPackage.Equipment)
                            {
                                <div class="equipment-item">
                                    <i class="fas fa-check-circle"></i>
                                    <span>@eq</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="fas fa-info-circle fa-2x mb-3"></i>
                            <p class="mb-0">No equipment available for this package.</p>
                        </div>
                    }
                </div>

                <!-- Assigned Employees Section -->
                <div class="dashboard-card">
                    <div class="card-header">
                        <h2><i class="fas fa-users"></i> Assigned Team Members</h2>
                    </div>

                    @if (employees != null && employees.Count > 0)
                    {
                        <table class="employees-table">
                            <thead>
                                <tr>
                                    <th style="width: 50px;">#</th>
                                    <th>Employee Name</th>
                                    <th>Role</th>
                                    <!-- Clipboard check for more formal look -->
                                    <th style="text-align: center;">
                                        <i class="fas fa-clipboard-check" style="color: #28a745;"></i>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < employees.Count; i++)
                                {
                                    <tr>
                                        <td>@(i + 1)</td>
                                        <td>@employees[i].FirstName @employees[i].LastName</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(employees[i].SkillQualification))
                                            {
                                                <span class="badge bg-primary">@employees[i].SkillQualification</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not specified</span>
                                            }
                                        </td>
                                        <td style="text-align: center;">
                                            <input type="checkbox" class="custom-checkbox" name="selectedEmployees" value="@employees[i].RegisteredEmployeeID" disabled />

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="scan-section" style="text-align: center; margin-top: 20px;">
                            <button id="openCameraBtn">Open Camera</button>
                            <button id="scanBtn" style="display:none;">Scan</button>
                            <div id="cameraPreview" style="width:300px; height:300px;"></div>

                        </div>

                        <!-- Add a placeholder for the Start Job button -->
                        <div style="text-align:center; margin-top:15px;">
                            <button id="startJobBtn" style="display:none;" class="btn btn-success">
                                <i class="fas fa-play"></i> Start Job
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="fas fa-user-slash fa-2x mb-3"></i>
                            <p class="mb-0">No employees assigned to this job.</p>
                        </div>
                    }
                </div>
            }
        </div>

    </div>

    <script>
        const menuToggle = document.getElementById('menuToggle');
        const sidebar = document.getElementById('sidebar');
        const mainContent = document.getElementById('mainContent');

        menuToggle.addEventListener('click', () => {
            sidebar.classList.toggle('open');
            mainContent.classList.toggle('shift');
        });
        fetch('/Employee/GetEmployeePendingCount')
            .then(res => res.json())
            .then(count => {
                const badge = document.getElementById('assignedBadge');
                if (count > 0) {
                    badge.textContent = count;
                    badge.style.display = 'inline-block';
                } else {
                    badge.style.display = 'none';
                }
            })
        // Fetch ongoing jobs count
        fetch('/Employee/GetEmployeeOngoingJobsCount')
            .then(res => res.json())
            .then(count => {
                const badge = document.getElementById('ongoingJobsBadge');
                if (count > 0) {
                    badge.textContent = count;
                    badge.style.display = 'inline-block';
                } else {
                    badge.style.display = 'none';
                }
            });

    </script>
    <script>
    var currentJobID = @((job != null) ? job.BookCleaningID.ToString() : "0");
    </script>

    <script src="https://unpkg.com/quagga@0.12.1/dist/quagga.min.js"></script>
    <script>
        const openCameraBtn = document.getElementById('openCameraBtn');
        const preview = document.getElementById('cameraPreview');
        const startJobBtn = document.getElementById('startJobBtn');
        const verifiedEmployees = new Set();
        const checkboxes = document.querySelectorAll('input.custom-checkbox');

        const showMessage = (msg, success = true) => {
            let msgDiv = document.getElementById('scanMessage');
            if (!msgDiv) {
                msgDiv = document.createElement('div');
                msgDiv.id = 'scanMessage';
                msgDiv.style.marginTop = '15px';
                msgDiv.style.fontWeight = '600';
                preview.parentElement.appendChild(msgDiv);
            }
            msgDiv.textContent = msg;
            msgDiv.style.color = success ? 'green' : 'red';
        };

        openCameraBtn.addEventListener('click', () => {
            openCameraBtn.style.display = 'none'; // hide open button once started

            Quagga.init({
                inputStream: {
                    name: "Live",
                    type: "LiveStream",
                    target: preview,
                    constraints: { facingMode: "environment" }
                },
                decoder: {
                    readers: ["code_128_reader", "ean_reader", "upc_reader", "code_39_reader"]
                }
            }, function (err) {
                if (err) {
                    console.error(err);
                    showMessage("Camera initialization failed: " + err.message, false);
                    return;
                }
                Quagga.start();
                preview.style.display = "block";
                showMessage("Camera started. Scan employee barcodes.");
            });

            Quagga.onDetected(result => {
                const code = result.codeResult.code;

                fetch('/Employee/VerifyEmployeeBarcode', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ scannedCode: code, bookCleaningID: currentJobID })
                })
                    .then(r => r.json())
                    .then(data => {
                        if (data.success) {
                            const checkbox = Array.from(checkboxes).find(cb => cb.value == data.id);
                            if (checkbox && !verifiedEmployees.has(data.id)) {
                                checkbox.checked = true;
                                verifiedEmployees.add(data.id);
                                const employeeName = checkbox.closest('tr').querySelector('td:nth-child(2)').textContent;
                                showMessage("Verified! Barcode belongs to " + employeeName);
                            }

                            // Show Start Job button if all employees verified
                            const allVerified = Array.from(checkboxes).every(cb => cb.checked);
                            if (allVerified) {
                                Quagga.stop();
                                if (document.querySelector('#cameraPreview video')) {
                                    document.querySelector('#cameraPreview video').style.display = 'none';
                                }
                                preview.style.display = 'none';
                                startJobBtn.style.display = 'inline-block'; // show Start Job button
                                showMessage("All employees verified. Ready to start job.");
                            }
                        } else {
                            showMessage(data.message || "Invalid barcode for this job.", false);
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        showMessage("Server error while verifying barcode.", false);
                    });
            });
        });
        // Start Job button click
        startJobBtn.addEventListener('click', () => {
            fetch('/Employee/StartJob', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ bookCleaningID: currentJobID })
            })
                .then(r => r.json())
                .then(data => {
                    if (data.success) {
                        showMessage("Job started successfully!", true);
                        startJobBtn.style.display = 'none';
                        // Redirect to EmployeeJobs page
                        window.location.href = '/Employee/EmployeeJobs';
                    } else {
                        showMessage(data.message || "Failed to start job.", false);
                    }
                })
                .catch(err => {
                    console.error(err);
                    showMessage("Server error while starting job.", false);
                });
        });
      


    </script>
</body>
</html>